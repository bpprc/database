# Generated by Django 3.1.4 on 2021-01-21 14:34

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AuditEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=64)),
                ("ip", models.GenericIPAddressField(null=True)),
                (
                    "username",
                    models.CharField(max_length=256, null=True),
                ),
            ],
            options={
                "verbose_name": "Audit Entry",
                "verbose_name_plural": "Audit entries",
            },
        ),
        migrations.CreateModel(
            name="SendEmail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "submittersname",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                (
                    "submittersemail",
                    models.EmailField(max_length=70, null=True),
                ),
                (
                    "accession",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                ("message", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserSubmission",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "submittersname",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                (
                    "submittersemail",
                    models.EmailField(max_length=70, null=True),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        verbose_name="Protein Name",
                    ),
                ),
                (
                    "sequence",
                    models.TextField(null=True, verbose_name="Protein Sequence"),
                ),
                (
                    "bacterium",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                    ),
                ),
                (
                    "bacterium_textbox",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "taxonid",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                (
                    "year",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    "accession",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        verbose_name="NCBI accession number",
                    ),
                ),
                (
                    "partnerprotein",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                    ),
                ),
                (
                    "partnerprotein_textbox",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "toxicto",
                    models.CharField(blank=True, max_length=250),
                ),
                (
                    "nontoxic",
                    models.CharField(blank=True, max_length=250),
                ),
                ("dnasequence", models.TextField(null=True)),
                (
                    "pdbcode",
                    models.CharField(blank=True, max_length=10),
                ),
                (
                    "publication",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="User comments",
                    ),
                ),
                (
                    "alignresults",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "predict_name",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Predicted Name",
                    ),
                ),
                (
                    "terms_conditions",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                    ),
                ),
                (
                    "admin_comments",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "private",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                    ),
                ),
                ("public", models.BooleanField(default=False)),
                (
                    "uploaded",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Uploaded",
                    ),
                ),
                (
                    "user_provided_proteinname",
                    models.CharField(blank=True, max_length=105),
                ),
                (
                    "admin_user",
                    models.ForeignKey(
                        blank=True,
                        default="1",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-uploaded",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Archive",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "submittersname",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                (
                    "submittersemail",
                    models.EmailField(max_length=70, null=True),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        verbose_name="Protein Name",
                    ),
                ),
                (
                    "sequence",
                    models.TextField(null=True, verbose_name="Protein Sequence"),
                ),
                (
                    "bacterium",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                    ),
                ),
                (
                    "bacterium_textbox",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "taxonid",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                (
                    "year",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    "accession",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        verbose_name="NCBI accession number",
                    ),
                ),
                (
                    "partnerprotein",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                    ),
                ),
                (
                    "partnerprotein_textbox",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "toxicto",
                    models.CharField(blank=True, max_length=250),
                ),
                (
                    "nontoxic",
                    models.CharField(blank=True, max_length=250),
                ),
                ("dnasequence", models.TextField(null=True)),
                (
                    "pdbcode",
                    models.CharField(blank=True, max_length=10),
                ),
                (
                    "publication",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="User comments",
                    ),
                ),
                (
                    "alignresults",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "predict_name",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Predicted Name",
                    ),
                ),
                (
                    "terms_conditions",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                    ),
                ),
                (
                    "admin_comments",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "private",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                    ),
                ),
                ("public", models.BooleanField(default=False)),
                (
                    "uploaded",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Uploaded",
                    ),
                ),
                (
                    "user_provided_proteinname",
                    models.CharField(blank=True, max_length=105),
                ),
                (
                    "admin_user",
                    models.ForeignKey(
                        blank=True,
                        default="1",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("-uploaded",),
                "abstract": False,
            },
        ),
    ]
